#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.4 on Tue Dec  6 23:13:14 2022
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
from neumodvb.signalhistoryplot import SignalHistoryPlot
from neumodvb import signalhistory_dialog
from neumodvb.dvbs_muxlist import DvbsBasicMuxGrid
from neumodvb.satlist_combo import SatListComboCtrl
# end wxGlade


class Panel(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: wx.Panel.__init__
        kwds["style"] = kwds.get("style", 0)
        wx.Panel.__init__(self, *args, **kwds)
        self.Layout()
        # end wxGlade

# end of class wx.Panel

class MuxListPanel_(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MuxListPanel_.__init__
        kwds["style"] = kwds.get("style", 0) | wx.BORDER_SUNKEN
        wx.Panel.__init__(self, *args, **kwds)

        sizer_21 = wx.FlexGridSizer(3, 1, 0, 0)

        label_22 = wx.StaticText(self, wx.ID_ANY, _("Muxes"))
        label_22.SetFont(wx.Font(8, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD, 0, ""))
        label_22.SetToolTip(_("Display  SNR history"))
        sizer_21.Add(label_22, 0, 0, 0)

        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_21.Add(sizer_4, 0, wx.BOTTOM | wx.EXPAND | wx.FIXED_MINSIZE | wx.RIGHT | wx.TOP, 3)

        self.sat_sel = SatListComboCtrl(self, wx.ID_ANY, "", style=wx.TE_DONTWRAP | wx.TE_LEFT | wx.TE_MULTILINE | wx.TE_READONLY | wx.TE_RICH)
        sizer_4.Add(self.sat_sel, 1, wx.EXPAND | wx.LEFT | wx.RIGHT, 3)

        self.button_4 = wx.Button(self, wx.ID_ANY, _("All"))
        self.button_4.SetFont(wx.Font(6, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        sizer_4.Add(self.button_4, 0, wx.ALIGN_CENTER_VERTICAL | wx.FIXED_MINSIZE | wx.LEFT | wx.RIGHT, 3)

        self.muxselect_grid = DvbsBasicMuxGrid(self, wx.ID_ANY, style=wx.LC_HRULES | wx.LC_NO_HEADER | wx.LC_REPORT | wx.LC_VIRTUAL | wx.LC_VRULES)
        self.muxselect_grid.SetFocus()
        sizer_21.Add(self.muxselect_grid, 1, wx.EXPAND, 0)

        sizer_21.AddGrowableRow(1)
        sizer_21.AddGrowableCol(0)
        self.SetSizer(sizer_21)

        self.Layout()

        self.Bind(wx.EVT_BUTTON, self.OnGroupShowAll, self.button_4)
        # end wxGlade

    def OnGroupShowAll(self, event):  # wxGlade: MuxListPanel_.<event_handler>
        print("Event handler 'OnGroupShowAll' not implemented!")
        event.Skip()

# end of class MuxListPanel_

class SignalHistoryDialog_(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: SignalHistoryDialog_.__init__
        kwds["style"] = kwds.get("style", 0) | wx.CLOSE_BOX | wx.MAXIMIZE_BOX | wx.MINIMIZE_BOX | wx.RESIZE_BORDER
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((1200, 600))
        self.SetTitle(_("Signal History"))

        # Menu Bar
        self.main_menubar = wx.MenuBar()
        self.menubar = wx.Menu()
        item = self.menubar.Append(wx.ID_ANY, _("&Quit\tCtrl-Q"), "")
        self.Bind(wx.EVT_MENU, self.CmdExit, item)
        self.main_menubar.Append(self.menubar, _("&View"))
        self.menubar = wx.Menu()
        item = self.menubar.Append(wx.ID_ANY, _("&Toggle Signal\tCtrl-Enter"), "")
        self.Bind(wx.EVT_MENU, self.OnMuxSelect, item)
        self.main_menubar.Append(self.menubar, _("&Control"))
        self.SetMenuBar(self.main_menubar)
        # Menu Bar end

        sizer_102 = wx.FlexGridSizer(1, 2, 10, 0)

        self.signalhistory_plot = SignalHistoryPlot(self, wx.ID_ANY)
        sizer_102.Add(self.signalhistory_plot, 1, wx.EXPAND, 0)

        grid_sizer_1 = wx.FlexGridSizer(2, 1, 0, 0)
        sizer_102.Add(grid_sizer_1, 1, wx.EXPAND, 0)

        self.choice_1 = wx.Choice(self, wx.ID_ANY, choices=[_("SNR"), _("Strength"), _("BER")])
        self.choice_1.SetSelection(0)
        grid_sizer_1.Add(self.choice_1, 0, 0, 0)

        self.muxlist_panel = signalhistory_dialog.MuxListPanel(self, wx.ID_ANY)
        grid_sizer_1.Add(self.muxlist_panel, 1, wx.EXPAND, 0)

        sizer_102.AddGrowableRow(0)
        sizer_102.AddGrowableCol(0)
        self.SetSizer(sizer_102)

        self.Layout()

        self.Bind(wx.EVT_CHOICE, self.OnSignalTypeSelect, self.choice_1)
        # end wxGlade

    def CmdExit(self, event):  # wxGlade: SignalHistoryDialog_.<event_handler>
        print("Event handler 'CmdExit' not implemented!")
        event.Skip()

    def OnMuxSelect(self, event):  # wxGlade: SignalHistoryDialog_.<event_handler>
        print("Event handler 'OnMuxSelect' not implemented!")
        event.Skip()

    def OnSignalTypeSelect(self, event):  # wxGlade: SignalHistoryDialog_.<event_handler>
        print("Event handler 'OnSignalTypeSelect' not implemented!")
        event.Skip()

# end of class SignalHistoryDialog_

class signa_history_app(wx.App):
    def OnInit(self):
        self.signalhistory_dialog = SignalHistoryDialog_(None, wx.ID_ANY, "")
        self.SetTopWindow(self.signalhistory_dialog)
        self.signalhistory_dialog.Show()
        return True

# end of class signa_history_app

if __name__ == "__main__":
    gettext.install("neumodvb") # replace with the appropriate catalog name

    neumodvb = signa_history_app(0)
    neumodvb.MainLoop()
