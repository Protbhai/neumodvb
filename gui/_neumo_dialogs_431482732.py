# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.1.0pre on Sun Oct  8 19:37:07 2023
#

import wx




class ScanDialog_(wx.Dialog):
				def __init__(self, *args, **kwds):
								kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_DIALOG_STYLE | wx.RESIZE_BORDER
								wx.Dialog.__init__(self, *args, **kwds)
								self.SetSize((400, 200))
								self.SetTitle("Scan Muxes")

								sizer_1 = wx.BoxSizer(wx.VERTICAL)

								self.panel_1 = wx.Panel(self, -1)
								sizer_1.Add(self.panel_1, 1, wx.EXPAND, 0)

								sizer_3 = wx.FlexGridSizer(5, 1, 0, 0)

								self.title_label = wx.StaticText(self.panel_1, -1, "Scan muxes")
								self.title_label.SetFont(wx.Font(8, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD, 0, ""))
								sizer_3.Add(self.title_label, 0, wx.BOTTOM, 5)

								self.scan_epg_checkbox = wx.CheckBox(self.panel_1, -1, "Scan EPG")
								self.scan_epg_checkbox.SetToolTip("Scan EPG program data (takes longer)")
								sizer_3.Add(self.scan_epg_checkbox, 0, 0, 0)

								self.propagate_scan_checkbox = wx.CheckBox(self.panel_1, -1, "Propagate scan")
								self.propagate_scan_checkbox.SetToolTip("When new muxes are discovered, \nscan them as well")
								self.propagate_scan_checkbox.SetValue(1)
								sizer_3.Add(self.propagate_scan_checkbox, 0, 0, 0)

								self.blind_tune_checkbox = wx.CheckBox(self.panel_1, -1, "Use blind tune")
								self.blind_tune_checkbox.SetToolTip("Do not trust tuning parameters, and use frequency as symbol rates as initial guess only")
								self.blind_tune_checkbox.SetValue(1)
								sizer_3.Add(self.blind_tune_checkbox, 0, 0, 0)

								self.may_move_dish_checkbox = wx.CheckBox(self.panel_1, -1, "Allow moving dish")
								self.may_move_dish_checkbox.SetToolTip("Allow moving satellite dish if it is not pointing at the correct satellite")
								sizer_3.Add(self.may_move_dish_checkbox, 0, 0, 0)

								sizer_2 = wx.StdDialogButtonSizer()
								sizer_1.Add(sizer_2, 0, wx.ALIGN_RIGHT | wx.ALL, 4)

								self.button_OK = wx.Button(self, wx.ID_OK, "")
								self.button_OK.SetDefault()
								sizer_2.AddButton(self.button_OK)

								self.button_CANCEL = wx.Button(self, wx.ID_CANCEL, "")
								sizer_2.AddButton(self.button_CANCEL)

								sizer_2.Realize()

								self.panel_1.SetSizer(sizer_3)

								self.SetSizer(sizer_1)

								self.SetAffirmativeId(self.button_OK.GetId())
								self.SetEscapeId(self.button_CANCEL.GetId())

								self.Layout()

